// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace UITest_BuildAbike
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddOrder_1 - Use 'AddOrder_1Params' to pass parameters into this method.
        /// </summary>
        public void AddOrder_1()
        {
            #region Variable Declarations
            WpfComboBox uIComboBox_frameSizeComboBox = this.UIBuildaBikeWindow.UIComboBox_frameSizeComboBox;
            WpfComboBox uIComboBox_frameColourComboBox = this.UIBuildaBikeWindow.UIComboBox_frameColourComboBox;
            WpfComboBox uIComboBox_gearsBreaksComboBox = this.UIBuildaBikeWindow.UIComboBox_gearsBreaksComboBox;
            WpfComboBox uIComboBox_wheelsComboBox = this.UIBuildaBikeWindow.UIComboBox_wheelsComboBox;
            WpfComboBox uIComboBox_handlebarSaComboBox = this.UIBuildaBikeWindow.UIComboBox_handlebarSaComboBox;
            WpfCheckBox uIExtendwarrantyCheckBox = this.UIBuildaBikeWindow.UIExtendwarrantyCheckBox;
            WpfButton uIAddButton = this.UIBuildaBikeWindow.UIAddButton;
            #endregion

            // Select 'Extra Small' in 'comboBox_frameSize' combo box
            uIComboBox_frameSizeComboBox.SelectedItem = this.AddOrder_1Params.UIComboBox_frameSizeComboBoxSelectedItem;

            // Select 'Red' in 'comboBox_frameColour' combo box
            uIComboBox_frameColourComboBox.SelectedItem = this.AddOrder_1Params.UIComboBox_frameColourComboBoxSelectedItem;

            // Select 'Group Set 1 (Shimano, Shimano)' in 'comboBox_gearsBreaks' combo box
            uIComboBox_gearsBreaksComboBox.SelectedItem = this.AddOrder_1Params.UIComboBox_gearsBreaksComboBoxSelectedItem;

            // Select 'Shimano' in 'comboBox_wheels' combo box
            uIComboBox_wheelsComboBox.SelectedItem = this.AddOrder_1Params.UIComboBox_wheelsComboBoxSelectedItem;

            // Select 'Group Set 1 (Renthal FatBar, Prologo)' in 'comboBox_handlebarSaddle' combo box
            uIComboBox_handlebarSaComboBox.SelectedItem = this.AddOrder_1Params.UIComboBox_handlebarSaComboBoxSelectedItem;

            // Select 'Extend warranty' check box
            uIExtendwarrantyCheckBox.Checked = this.AddOrder_1Params.UIExtendwarrantyCheckBoxChecked;

            // Click 'Add' button
            Mouse.Click(uIAddButton, new Point(50, 17));
        }
        
        /// <summary>
        /// AddOrder_2 - Use 'AddOrder_2Params' to pass parameters into this method.
        /// </summary>
        public void AddOrder_2()
        {
            #region Variable Declarations
            WpfComboBox uIComboBox_frameSizeComboBox = this.UIBuildaBikeWindow.UIComboBox_frameSizeComboBox;
            WpfComboBox uIComboBox_frameColourComboBox = this.UIBuildaBikeWindow.UIComboBox_frameColourComboBox;
            WpfComboBox uIComboBox_gearsBreaksComboBox = this.UIBuildaBikeWindow.UIComboBox_gearsBreaksComboBox;
            WpfComboBox uIComboBox_wheelsComboBox = this.UIBuildaBikeWindow.UIComboBox_wheelsComboBox;
            WpfComboBox uIComboBox_handlebarSaComboBox = this.UIBuildaBikeWindow.UIComboBox_handlebarSaComboBox;
            WpfButton uIAddButton = this.UIBuildaBikeWindow.UIAddButton;
            #endregion

            // Select 'Small' in 'comboBox_frameSize' combo box
            uIComboBox_frameSizeComboBox.SelectedItem = this.AddOrder_2Params.UIComboBox_frameSizeComboBoxSelectedItem;

            // Select 'Blue' in 'comboBox_frameColour' combo box
            uIComboBox_frameColourComboBox.SelectedItem = this.AddOrder_2Params.UIComboBox_frameColourComboBoxSelectedItem;

            // Select 'Group Set 2 (SRAM, Avid)' in 'comboBox_gearsBreaks' combo box
            uIComboBox_gearsBreaksComboBox.SelectedItem = this.AddOrder_2Params.UIComboBox_gearsBreaksComboBoxSelectedItem;

            // Select 'Campagnolo' in 'comboBox_wheels' combo box
            uIComboBox_wheelsComboBox.SelectedItem = this.AddOrder_2Params.UIComboBox_wheelsComboBoxSelectedItem;

            // Select 'Group Set 2 (Race Face, Fizik Arione)' in 'comboBox_handlebarSaddle' combo box
            uIComboBox_handlebarSaComboBox.SelectedItem = this.AddOrder_2Params.UIComboBox_handlebarSaComboBoxSelectedItem;

            // Click 'Add' button
            Mouse.Click(uIAddButton, new Point(50, 9));
        }
        
        /// <summary>
        /// AddOrder_3 - Use 'AddOrder_3Params' to pass parameters into this method.
        /// </summary>
        public void AddOrder_3()
        {
            #region Variable Declarations
            WpfComboBox uIComboBox_frameSizeComboBox = this.UIBuildaBikeWindow.UIComboBox_frameSizeComboBox;
            WpfComboBox uIComboBox_frameColourComboBox = this.UIBuildaBikeWindow.UIComboBox_frameColourComboBox;
            WpfComboBox uIComboBox_gearsBreaksComboBox = this.UIBuildaBikeWindow.UIComboBox_gearsBreaksComboBox;
            WpfComboBox uIComboBox_wheelsComboBox = this.UIBuildaBikeWindow.UIComboBox_wheelsComboBox;
            WpfComboBox uIComboBox_handlebarSaComboBox = this.UIBuildaBikeWindow.UIComboBox_handlebarSaComboBox;
            WpfCheckBox uIExtendwarrantyCheckBox = this.UIBuildaBikeWindow.UIExtendwarrantyCheckBox;
            WpfButton uIAddButton = this.UIBuildaBikeWindow.UIAddButton;
            #endregion

            // Select 'Large' in 'comboBox_frameSize' combo box
            uIComboBox_frameSizeComboBox.SelectedItem = this.AddOrder_3Params.UIComboBox_frameSizeComboBoxSelectedItem;

            // Select 'Black' in 'comboBox_frameColour' combo box
            uIComboBox_frameColourComboBox.SelectedItem = this.AddOrder_3Params.UIComboBox_frameColourComboBoxSelectedItem;

            // Select 'Group Set 3 (Campagnolo, Clarks)' in 'comboBox_gearsBreaks' combo box
            uIComboBox_gearsBreaksComboBox.SelectedItem = this.AddOrder_3Params.UIComboBox_gearsBreaksComboBoxSelectedItem;

            // Select 'DT Swiss' in 'comboBox_wheels' combo box
            uIComboBox_wheelsComboBox.SelectedItem = this.AddOrder_3Params.UIComboBox_wheelsComboBoxSelectedItem;

            // Select 'Group Set 2 (Race Face, Fizik Arione)' in 'comboBox_handlebarSaddle' combo box
            uIComboBox_handlebarSaComboBox.SelectedItem = this.AddOrder_3Params.UIComboBox_handlebarSaComboBoxSelectedItem;

            // Select 'Extend warranty' check box
            uIExtendwarrantyCheckBox.Checked = this.AddOrder_3Params.UIExtendwarrantyCheckBoxChecked;

            // Click 'Add' button
            Mouse.Click(uIAddButton, new Point(13, 19));
        }
        
        /// <summary>
        /// Payment - Use 'PaymentParams' to pass parameters into this method.
        /// </summary>
        public void Payment()
        {
            #region Variable Declarations
            WpfButton uIPayButton = this.UIBuildaBikeWindow.UIPayButton;
            WpfEdit uITxtb_nameEdit = this.UICustomerWindow.UITxtb_nameEdit;
            WpfEdit uITxtb_addressEdit = this.UICustomerWindow.UITxtb_addressEdit;
            WpfEdit uITxtb_emailEdit = this.UICustomerWindow.UITxtb_emailEdit;
            WpfButton uIPayButton1 = this.UICustomerWindow.UIPayButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Click 'Pay' button
            Mouse.Click(uIPayButton, new Point(29, 10));

            // Type 'Richard Borbely' in 'txtb_name' text box
            uITxtb_nameEdit.Text = this.PaymentParams.UITxtb_nameEditText;

            // Type 'Edinburgh' in 'txtb_address' text box
            uITxtb_addressEdit.Text = this.PaymentParams.UITxtb_addressEditText;

            // Type '40283185@live.napier.ac.uk' in 'txtb_email' text box
            uITxtb_emailEdit.Text = this.PaymentParams.UITxtb_emailEditText;

            // Click 'Pay' button
            Mouse.Click(uIPayButton1, new Point(24, 14));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(33, 14));
        }
        
        #region Properties
        public virtual AddOrder_1Params AddOrder_1Params
        {
            get
            {
                if ((this.mAddOrder_1Params == null))
                {
                    this.mAddOrder_1Params = new AddOrder_1Params();
                }
                return this.mAddOrder_1Params;
            }
        }
        
        public virtual AddOrder_2Params AddOrder_2Params
        {
            get
            {
                if ((this.mAddOrder_2Params == null))
                {
                    this.mAddOrder_2Params = new AddOrder_2Params();
                }
                return this.mAddOrder_2Params;
            }
        }
        
        public virtual AddOrder_3Params AddOrder_3Params
        {
            get
            {
                if ((this.mAddOrder_3Params == null))
                {
                    this.mAddOrder_3Params = new AddOrder_3Params();
                }
                return this.mAddOrder_3Params;
            }
        }
        
        public virtual PaymentParams PaymentParams
        {
            get
            {
                if ((this.mPaymentParams == null))
                {
                    this.mPaymentParams = new PaymentParams();
                }
                return this.mPaymentParams;
            }
        }
        
        public UIBuildaBikeWindow UIBuildaBikeWindow
        {
            get
            {
                if ((this.mUIBuildaBikeWindow == null))
                {
                    this.mUIBuildaBikeWindow = new UIBuildaBikeWindow();
                }
                return this.mUIBuildaBikeWindow;
            }
        }
        
        public UICustomerWindow UICustomerWindow
        {
            get
            {
                if ((this.mUICustomerWindow == null))
                {
                    this.mUICustomerWindow = new UICustomerWindow();
                }
                return this.mUICustomerWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddOrder_1Params mAddOrder_1Params;
        
        private AddOrder_2Params mAddOrder_2Params;
        
        private AddOrder_3Params mAddOrder_3Params;
        
        private PaymentParams mPaymentParams;
        
        private UIBuildaBikeWindow mUIBuildaBikeWindow;
        
        private UICustomerWindow mUICustomerWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddOrder_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AddOrder_1Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Extra Small' in 'comboBox_frameSize' combo box
        /// </summary>
        public string UIComboBox_frameSizeComboBoxSelectedItem = "Extra Small";
        
        /// <summary>
        /// Select 'Red' in 'comboBox_frameColour' combo box
        /// </summary>
        public string UIComboBox_frameColourComboBoxSelectedItem = "Red";
        
        /// <summary>
        /// Select 'Group Set 1 (Shimano, Shimano)' in 'comboBox_gearsBreaks' combo box
        /// </summary>
        public string UIComboBox_gearsBreaksComboBoxSelectedItem = "Group Set 1 (Shimano, Shimano)";
        
        /// <summary>
        /// Select 'Shimano' in 'comboBox_wheels' combo box
        /// </summary>
        public string UIComboBox_wheelsComboBoxSelectedItem = "Shimano";
        
        /// <summary>
        /// Select 'Group Set 1 (Renthal FatBar, Prologo)' in 'comboBox_handlebarSaddle' combo box
        /// </summary>
        public string UIComboBox_handlebarSaComboBoxSelectedItem = "Group Set 1 (Renthal FatBar, Prologo)";
        
        /// <summary>
        /// Select 'Extend warranty' check box
        /// </summary>
        public bool UIExtendwarrantyCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddOrder_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AddOrder_2Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Small' in 'comboBox_frameSize' combo box
        /// </summary>
        public string UIComboBox_frameSizeComboBoxSelectedItem = "Small";
        
        /// <summary>
        /// Select 'Blue' in 'comboBox_frameColour' combo box
        /// </summary>
        public string UIComboBox_frameColourComboBoxSelectedItem = "Blue";
        
        /// <summary>
        /// Select 'Group Set 2 (SRAM, Avid)' in 'comboBox_gearsBreaks' combo box
        /// </summary>
        public string UIComboBox_gearsBreaksComboBoxSelectedItem = "Group Set 2 (SRAM, Avid)";
        
        /// <summary>
        /// Select 'Campagnolo' in 'comboBox_wheels' combo box
        /// </summary>
        public string UIComboBox_wheelsComboBoxSelectedItem = "Campagnolo";
        
        /// <summary>
        /// Select 'Group Set 2 (Race Face, Fizik Arione)' in 'comboBox_handlebarSaddle' combo box
        /// </summary>
        public string UIComboBox_handlebarSaComboBoxSelectedItem = "Group Set 2 (Race Face, Fizik Arione)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddOrder_3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AddOrder_3Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Large' in 'comboBox_frameSize' combo box
        /// </summary>
        public string UIComboBox_frameSizeComboBoxSelectedItem = "Large";
        
        /// <summary>
        /// Select 'Black' in 'comboBox_frameColour' combo box
        /// </summary>
        public string UIComboBox_frameColourComboBoxSelectedItem = "Black";
        
        /// <summary>
        /// Select 'Group Set 3 (Campagnolo, Clarks)' in 'comboBox_gearsBreaks' combo box
        /// </summary>
        public string UIComboBox_gearsBreaksComboBoxSelectedItem = "Group Set 3 (Campagnolo, Clarks)";
        
        /// <summary>
        /// Select 'DT Swiss' in 'comboBox_wheels' combo box
        /// </summary>
        public string UIComboBox_wheelsComboBoxSelectedItem = "DT Swiss";
        
        /// <summary>
        /// Select 'Group Set 2 (Race Face, Fizik Arione)' in 'comboBox_handlebarSaddle' combo box
        /// </summary>
        public string UIComboBox_handlebarSaComboBoxSelectedItem = "Group Set 2 (Race Face, Fizik Arione)";
        
        /// <summary>
        /// Select 'Extend warranty' check box
        /// </summary>
        public bool UIExtendwarrantyCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Payment'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class PaymentParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Richard Borbely' in 'txtb_name' text box
        /// </summary>
        public string UITxtb_nameEditText = "Richard Borbely";
        
        /// <summary>
        /// Type 'Edinburgh' in 'txtb_address' text box
        /// </summary>
        public string UITxtb_addressEditText = "Edinburgh";
        
        /// <summary>
        /// Type '40283185@live.napier.ac.uk' in 'txtb_email' text box
        /// </summary>
        public string UITxtb_emailEditText = "40283185@live.napier.ac.uk";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBuildaBikeWindow : WpfWindow
    {
        
        public UIBuildaBikeWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Build-a-Bike";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Build-a-Bike");
            #endregion
        }
        
        #region Properties
        public WpfComboBox UIComboBox_frameSizeComboBox
        {
            get
            {
                if ((this.mUIComboBox_frameSizeComboBox == null))
                {
                    this.mUIComboBox_frameSizeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIComboBox_frameSizeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "comboBox_frameSize";
                    this.mUIComboBox_frameSizeComboBox.WindowTitles.Add("Build-a-Bike");
                    #endregion
                }
                return this.mUIComboBox_frameSizeComboBox;
            }
        }
        
        public WpfComboBox UIComboBox_frameColourComboBox
        {
            get
            {
                if ((this.mUIComboBox_frameColourComboBox == null))
                {
                    this.mUIComboBox_frameColourComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIComboBox_frameColourComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "comboBox_frameColour";
                    this.mUIComboBox_frameColourComboBox.WindowTitles.Add("Build-a-Bike");
                    #endregion
                }
                return this.mUIComboBox_frameColourComboBox;
            }
        }
        
        public WpfComboBox UIComboBox_gearsBreaksComboBox
        {
            get
            {
                if ((this.mUIComboBox_gearsBreaksComboBox == null))
                {
                    this.mUIComboBox_gearsBreaksComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIComboBox_gearsBreaksComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "comboBox_gearsBreaks";
                    this.mUIComboBox_gearsBreaksComboBox.WindowTitles.Add("Build-a-Bike");
                    #endregion
                }
                return this.mUIComboBox_gearsBreaksComboBox;
            }
        }
        
        public WpfComboBox UIComboBox_wheelsComboBox
        {
            get
            {
                if ((this.mUIComboBox_wheelsComboBox == null))
                {
                    this.mUIComboBox_wheelsComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIComboBox_wheelsComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "comboBox_wheels";
                    this.mUIComboBox_wheelsComboBox.WindowTitles.Add("Build-a-Bike");
                    #endregion
                }
                return this.mUIComboBox_wheelsComboBox;
            }
        }
        
        public WpfComboBox UIComboBox_handlebarSaComboBox
        {
            get
            {
                if ((this.mUIComboBox_handlebarSaComboBox == null))
                {
                    this.mUIComboBox_handlebarSaComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIComboBox_handlebarSaComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "comboBox_handlebarSaddle";
                    this.mUIComboBox_handlebarSaComboBox.WindowTitles.Add("Build-a-Bike");
                    #endregion
                }
                return this.mUIComboBox_handlebarSaComboBox;
            }
        }
        
        public WpfCheckBox UIExtendwarrantyCheckBox
        {
            get
            {
                if ((this.mUIExtendwarrantyCheckBox == null))
                {
                    this.mUIExtendwarrantyCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIExtendwarrantyCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "checkBox_warranty";
                    this.mUIExtendwarrantyCheckBox.WindowTitles.Add("Build-a-Bike");
                    #endregion
                }
                return this.mUIExtendwarrantyCheckBox;
            }
        }
        
        public WpfButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btn_addOrder";
                    this.mUIAddButton.WindowTitles.Add("Build-a-Bike");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        
        public WpfButton UIPayButton
        {
            get
            {
                if ((this.mUIPayButton == null))
                {
                    this.mUIPayButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIPayButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btn_pay";
                    this.mUIPayButton.WindowTitles.Add("Build-a-Bike");
                    #endregion
                }
                return this.mUIPayButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mUIComboBox_frameSizeComboBox;
        
        private WpfComboBox mUIComboBox_frameColourComboBox;
        
        private WpfComboBox mUIComboBox_gearsBreaksComboBox;
        
        private WpfComboBox mUIComboBox_wheelsComboBox;
        
        private WpfComboBox mUIComboBox_handlebarSaComboBox;
        
        private WpfCheckBox mUIExtendwarrantyCheckBox;
        
        private WpfButton mUIAddButton;
        
        private WpfButton mUIPayButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICustomerWindow : WpfWindow
    {
        
        public UICustomerWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Customer";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Customer");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITxtb_nameEdit
        {
            get
            {
                if ((this.mUITxtb_nameEdit == null))
                {
                    this.mUITxtb_nameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtb_nameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txtb_name";
                    this.mUITxtb_nameEdit.WindowTitles.Add("Customer");
                    #endregion
                }
                return this.mUITxtb_nameEdit;
            }
        }
        
        public WpfEdit UITxtb_addressEdit
        {
            get
            {
                if ((this.mUITxtb_addressEdit == null))
                {
                    this.mUITxtb_addressEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtb_addressEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txtb_address";
                    this.mUITxtb_addressEdit.WindowTitles.Add("Customer");
                    #endregion
                }
                return this.mUITxtb_addressEdit;
            }
        }
        
        public WpfEdit UITxtb_emailEdit
        {
            get
            {
                if ((this.mUITxtb_emailEdit == null))
                {
                    this.mUITxtb_emailEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtb_emailEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txtb_email";
                    this.mUITxtb_emailEdit.WindowTitles.Add("Customer");
                    #endregion
                }
                return this.mUITxtb_emailEdit;
            }
        }
        
        public WpfButton UIPayButton
        {
            get
            {
                if ((this.mUIPayButton == null))
                {
                    this.mUIPayButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIPayButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btn_pay";
                    this.mUIPayButton.WindowTitles.Add("Customer");
                    #endregion
                }
                return this.mUIPayButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITxtb_nameEdit;
        
        private WpfEdit mUITxtb_addressEdit;
        
        private WpfEdit mUITxtb_emailEdit;
        
        private WpfButton mUIPayButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
